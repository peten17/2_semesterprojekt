def P040413_sockettest_receive_3_coordinates():
  set_analog_inputrange(0, 0)
  set_analog_inputrange(1, 0)
  set_analog_inputrange(2, 0)
  set_analog_inputrange(3, 0)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_tool_voltage(24)
  set_runstate_outputs([])
  set_payload(0.0)
  set_gravity([0.0, 0.0, 9.82])
  Move_To_Pos=p[0, 0.4, 0.4, 0, 3.14, 0]
  Pointer=0
  Receive_Data=[0, 0, 0, 0, 0, 0, 0]
  Socket_Closed=True
  $ 2 “BeforeStart”
  $ 3 “MoveJ”
  $ 4 “Waypoint_1″
  movej([-4.436072065494562, -1.3509294688607585, -1.5898662740424647, -1.7720278195761425, 1.5692639625048612, -2.8652732472940476], a=1.3962634015954636, v=1.0471975511965976)
  while (True):
    $ 5 “Robot Program”
    $ 6 “Move_To_Pos:=Move_To_Pos”
    global Move_To_Pos = Move_To_Pos
    varmsg(“Move_To_Pos”,Move_To_Pos)
    $ 7 “Receive_Data:=Receive_Data”
    global Receive_Data = Receive_Data
    varmsg(“Receive_Data”,Receive_Data)
    $ 8 “Pointer:=Pointer”
    global Pointer = Pointer
    varmsg(“Pointer”,Pointer)
    $ 9 “If Socket_Closed= True “
    if (Socket_Closed ==  True  ):
      $ 10 “socket_open(’192.168.0.100′, 30000)”
      socket_open(“192.168.0.100″, 30000)
      $ 11 “Socket_Closed:= False “
      global Socket_Closed =   False 
      varmsg(“Socket_Closed”,Socket_Closed)
    end
    $ 12 “socket_send_string(‘Asking_Waypoint_1′)”
    socket_send_string(“Asking_Waypoint_1″)
    $ 13 “Wait: 3.0″
    sleep(3.0)
    $ 14 “Receive_Data = socket_read_ascii_float(6)”
    Receive_Data = socket_read_ascii_float(6)
    $ 15 “Pointer:=0″
    global Pointer = 0
    varmsg(“Pointer”,Pointer)
    $ 16 “While Pointer < Receive_Data[0]“
    while (Pointer < Receive_Data[0]):
      $ 17 “Move_To_Pos[Pointer] = Receive_Data[Pointer+1]“
      Move_To_Pos[Pointer] = Receive_Data[Pointer+1]
      $ 18 “Pointer:=Pointer+1″
      global Pointer = Pointer+1
      varmsg(“Pointer”,Pointer)
    end
    $ 19 “varmsg(‘Move_To_Pos’, Move_To_Pos)”
    varmsg(“Move_To_Pos”, Move_To_Pos)
    $ 20 “movel(Move_To_Pos)”
    movel(Move_To_Pos)
    $ 21 “socket_send_string(‘Asking_Waypoint_2′)”
    socket_send_string(“Asking_Waypoint_2″)
    $ 22 “Wait: 3.0″
    sleep(3.0)
    $ 23 “Receive_Data = socket_read_ascii_float(6)”
    Receive_Data = socket_read_ascii_float(6)
    $ 24 “Pointer:=0″
    global Pointer = 0
    varmsg(“Pointer”,Pointer)
    $ 25 “While Pointer < Receive_Data[0]“
    while (Pointer < Receive_Data[0]):
      $ 26 “Move_To_Pos[Pointer] = Receive_Data[Pointer+1]“
      Move_To_Pos[Pointer] = Receive_Data[Pointer+1]
      $ 27 “Pointer:=Pointer+1″
      global Pointer = Pointer+1
      varmsg(“Pointer”,Pointer)
    end
    $ 28 “varmsg(‘Move_To_Pos’, Move_To_Pos)”
    varmsg(“Move_To_Pos”, Move_To_Pos)
    $ 29 “movel(Move_To_Pos)”
    movel(Move_To_Pos)
    $ 30 “socket_send_string(‘Asking_Waypoint_3′)”
    socket_send_string(“Asking_Waypoint_3″)
    $ 31 “Wait: 3.0″
    sleep(3.0)
    $ 32 “Receive_Data = socket_read_ascii_float(6)”
    Receive_Data = socket_read_ascii_float(6)
    $ 33 “Pointer:=0″
    global Pointer = 0
    varmsg(“Pointer”,Pointer)
    $ 34 “While Pointer < Receive_Data[0]“
    while (Pointer < Receive_Data[0]):
      $ 35 “Move_To_Pos[Pointer] = Receive_Data[Pointer+1]“
      Move_To_Pos[Pointer] = Receive_Data[Pointer+1]
      $ 36 “Pointer:=Pointer+1″
      global Pointer = Pointer+1
      varmsg(“Pointer”,Pointer)
    end
    $ 37 “varmsg(‘Move_To_Pos’, Move_To_Pos)”
    varmsg(“Move_To_Pos”, Move_To_Pos)
    $ 38 “movel(Move_To_Pos)”
    movel(Move_To_Pos)
  end
end